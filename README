NAME
    Plack::App::Tree::View - Plack application to view Tree object.

SYNOPSIS
     use Plack::App::Tree::View;

     my $obj = Plack::App::Tree::View->new(%parameters);
     my $psgi_ar = $obj->call($env);
     my $app = $obj->to_app;

DESCRIPTION
    Plack application which prints tree. Record is defined by Tree object.

METHODS
  "new"
     my $obj = Plack::App::Tree::View->new(%parameters);

    Constructor.

    *       "tree"

            Set Tree object.

            It's optional.

            Default value is undef.

    *       "css"

            Instance of CSS::Struct::Output object.

            Default value is CSS::Struct::Output::Raw instance.

    *       "generator"

            HTML generator string.

            Default value is 'Plack::App::Tree::View; Version: __VERSION__'

    *       "tags"

            Instance of Tags::Output object.

            Default value is Tags::Output::Raw->new('xml' => 1) instance.

    *       "title"

            Page title.

            Default value is 'Tree view'.

    Returns instance of object.

  "call"
     my $psgi_ar = $obj->call($env);

    Implementation of view page.

    Returns reference to array (PSGI structure).

  "to_app"
     my $app = $obj->to_app;

    Creates Plack application.

    Returns Plack::Component object.

EXAMPLE
     use strict;
     use warnings;

     use CSS::Struct::Output::Indent;
     use Plack::App::Tree::View;
     use Plack::Runner;
     use Tags::Output::Indent;
     use Tree;

     # Tree example.
     my $tree = Tree->new('Root');
     my %node;
     foreach my $node_string (qw/H I J K L M N O P Q/) {
              $node{$node_string} = Tree->new($node_string);
     }
     $tree->add_child($node{'H'});
     $node{'H'}->add_child($node{'I'});
     $node{'I'}->add_child($node{'J'});
     $node{'H'}->add_child($node{'K'});
     $node{'H'}->add_child($node{'L'});
     $tree->add_child($node{'M'});
     $tree->add_child($node{'N'});
     $node{'N'}->add_child($node{'O'});
     $node{'O'}->add_child($node{'P'});
     $node{'P'}->add_child($node{'Q'});

     # Run application.
     my $app = Plack::App::Tree::View->new(
             'css' => CSS::Struct::Output::Indent->new,
             'generator' => 'Plack::App::Tree::View',
             'tags' => Tags::Output::Indent->new(
                     'preserved' => ['style'],
                     'xml' => 1,
             ),
             'tree' => $tree,
     )->to_app;
     Plack::Runner->new->run($app);

     # Output:
     # HTTP::Server::PSGI: Accepting connections at http://0:5000/

     # > curl http://localhost:5000/
     # TODO

DEPENDENCIES
    Plack::Component::Tags::HTML, Plack::Util::Accessor, Tags::HTML::Tree.

REPOSITORY
    <https://github.com/michal-josef-spacek/Plack-App-Tree-View>

AUTHOR
    Michal Josef Špaček <mailto:skim@cpan.org>

    <http://skim.cz>

LICENSE AND COPYRIGHT
    © 2024 Michal Josef Špaček

    BSD 2-Clause License

VERSION
    0.01

